cli:
  image: divvycloud/stable
  volumes:
      - ./config/divvy.json:/config/divvy.json
  environment:
    VIRTUAL_ENV: '/'
  entrypoint:
    - python
    - /entrypoint.py
 

register:
  extends:
    service: cli
  hostname: setup
  command: "/usr/local/bin/divvyadmin register --company_name ${COMPANY_NAME} --contact_name ${CONTACT_NAME} --contact_email ${CONTACT_EMAIL}"
  links:
    - redis
    - mysql
    - elasticsearch

scheduler:
  extends:
    service: cli
  hostname: scheduler
  command: /usr/local/bin/divvycloudjobscheduler -n
  links:
    - redis
    - mysql
    - elasticsearch

harvester:
  extends:
    service: cli
  hostname: harvester
  command: divvycloudworker -t harvester -n
  links:
    - redis
    - mysql
    - elasticsearch

processor:
  extends:
    service: cli
  hostname: processor
  command: divvycloudworker -t processor -n
  links:
    - redis
    - mysql
    - elasticsearch

on-demand:
  extends:
    service: cli
  hostname: ondemand
  command: divvycloudworker -t on-demand -n
  links:
    - redis
    - mysql
    - elasticsearch

long-harvest:
  extends:
    service: cli
  hostname: harvester-long
  command: divvycloudworker -t harvester-long -n
  links:
    - redis
    - mysql
    - elasticsearch


interfaceserver:
  extends:
    service: cli
  hostname: interface
  command: /usr/local/bin/divvyinterfaceserver -n
  ports:
    - "8001:8001"
  links:
    - redis
    - mysql
    - elasticsearch 

redis:
  image: redis
  ports:
    - "6379:6379"

mysql:
  image: mysql
  volumes:
    - ./db/:/var/lib/mysql
    - ./config/divvycloud_mysql_entrypoint.sh:/docker-entrypoint-initdb.d/divvycloud_mysql_entrypoint.sh
    
  environment:
    MYSQL_ROOT_PASSWORD: 'divvy'
    MYSQL_USER: 'divvy'
    MYSQL_PASSWORD: 'divvy'

elasticsearch:
  image: elasticsearch
  volumes:
    - ./esdata:/usr/share/elasticsearch/data elasticsearch
